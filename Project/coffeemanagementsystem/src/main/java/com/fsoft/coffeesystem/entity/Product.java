package com.fsoft.coffeesystem.entity;

// Generated 11-Jan-2017 22:33:33 by Hibernate Tools 5.2.0.Beta1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
// TODO: Auto-generated Javadoc

/**
 * Product generated by hbm2java.
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "product", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Product implements java.io.Serializable {

	/** The id. */
	private int id;
	
	/** The product group. */
	private ProductGroup productGroup;
	
	/** The store. */
	private Store store;
	
	/** The name. */
	private String name;
	
	/** The price. */
	private BigDecimal price;
	
	/** The status. */
	private boolean status;
	
	/** The is delete. */
	private Boolean isDelete;
	
	/** The description. */
	private String description;
	
	/** The promotion details. */
	private Set<PromotionDetail> promotionDetails = new HashSet<PromotionDetail>(0);
	
	/** The order details. */
	private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);

	/**
	 * Instantiates a new product.
	 */
	public Product() {
	}

	/**
	 * Instantiates a new product.
	 *
	 * @param id the id
	 * @param productGroup the product group
	 * @param name the name
	 * @param price the price
	 * @param status the status
	 */
	public Product(int id, ProductGroup productGroup, String name, BigDecimal price, boolean status) {
		this.id = id;
		this.productGroup = productGroup;
		this.name = name;
		this.price = price;
		this.status = status;
	}

	/**
	 * Instantiates a new product.
	 *
	 * @param id the id
	 * @param productGroup the product group
	 * @param store the store
	 * @param name the name
	 * @param price the price
	 * @param status the status
	 * @param isDelete the is delete
	 * @param description the description
	 * @param promotionDetails the promotion details
	 * @param orderDetails the order details
	 */
	public Product(int id, ProductGroup productGroup, Store store, String name, BigDecimal price, boolean status,
			Boolean isDelete, String description, Set<PromotionDetail> promotionDetails,
			Set<OrderDetail> orderDetails) {
		this.id = id;
		this.productGroup = productGroup;
		this.store = store;
		this.name = name;
		this.price = price;
		this.status = status;
		this.isDelete = isDelete;
		this.description = description;
		this.promotionDetails = promotionDetails;
		this.orderDetails = orderDetails;
	}

	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	@Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id the new id
	 */
	public void setId(int id) {
		this.id = id;
	}

	/**
	 * Gets the product group.
	 *
	 * @return the product group
	 */
	@ManyToOne
	@JoinColumn(name = "productGroupId", nullable = false)
	public ProductGroup getProductGroup() {
		return this.productGroup;
	}

	/**
	 * Sets the product group.
	 *
	 * @param productGroup the new product group
	 */
	public void setProductGroup(ProductGroup productGroup) {
		this.productGroup = productGroup;
	}

	/**
	 * Gets the store.
	 *
	 * @return the store
	 */
	@ManyToOne
	@JoinColumn(name = "storeId")
	public Store getStore() {
		return this.store;
	}

	/**
	 * Sets the store.
	 *
	 * @param store the new store
	 */
	public void setStore(Store store) {
		this.store = store;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	@Column(name = "name", unique = true, nullable = false)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the price.
	 *
	 * @return the price
	 */
	@Column(name = "price", nullable = false, scale = 4)
	public BigDecimal getPrice() {
		return this.price;
	}

	/**
	 * Sets the price.
	 *
	 * @param price the new price
	 */
	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	/**
	 * Checks if is status.
	 *
	 * @return true, if is status
	 */
	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	/**
	 * Sets the status.
	 *
	 * @param status the new status
	 */
	public void setStatus(boolean status) {
		this.status = status;
	}

	/**
	 * Gets the checks if is delete.
	 *
	 * @return the checks if is delete
	 */
	@Column(name = "isDelete")
	public Boolean getIsDelete() {
		return this.isDelete;
	}

	/**
	 * Sets the checks if is delete.
	 *
	 * @param isDelete the new checks if is delete
	 */
	public void setIsDelete(Boolean isDelete) {
		this.isDelete = isDelete;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the promotion details.
	 *
	 * @return the promotion details
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<PromotionDetail> getPromotionDetails() {
		return this.promotionDetails;
	}

	/**
	 * Sets the promotion details.
	 *
	 * @param promotionDetails the new promotion details
	 */
	public void setPromotionDetails(Set<PromotionDetail> promotionDetails) {
		this.promotionDetails = promotionDetails;
	}

	/**
	 * Gets the order details.
	 *
	 * @return the order details
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<OrderDetail> getOrderDetails() {
		return this.orderDetails;
	}

	/**
	 * Sets the order details.
	 *
	 * @param orderDetails the new order details
	 */
	public void setOrderDetails(Set<OrderDetail> orderDetails) {
		this.orderDetails = orderDetails;
	}

}
