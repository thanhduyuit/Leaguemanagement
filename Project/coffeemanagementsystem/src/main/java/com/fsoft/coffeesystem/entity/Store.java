/*
 * 
 */
package com.fsoft.coffeesystem.entity;

// Generated 11-Jan-2017 22:33:33 by Hibernate Tools 5.2.0.Beta1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;


// TODO: Auto-generated Javadoc
/**
 * Store generated by hbm2java.
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "store")
public class Store implements java.io.Serializable {

	/** The id. */
	private int id;
	
	/** The name. */
	private String name;
	
	/** The is delete. */
	private Boolean isDelete;
	
	/** The description. */
	private String description;
	
	/** The employees. */
	private Set<Employee> employees = new HashSet<Employee>(0);
	
	/** The warehouses. */
	private Set<Warehouse> warehouses = new HashSet<Warehouse>(0);
	
	/** The products. */
	private Set<Product> products = new HashSet<Product>(0);
	
	/** The desks. */
	private Set<Desk> desks = new HashSet<Desk>(0);
	
	/** The promotions. */
	private Set<Promotion> promotions = new HashSet<Promotion>(0);
	
	/** The store account. */
	private Set<StoreAccount> storeAccount = new HashSet<StoreAccount>(0);

	/** The desks. */
	private Set<Customer> customer = new HashSet<Customer>(0);
	
	/**
	 * Instantiates a new store.
	 */
	public Store() {
	}

	/**
	 * Instantiates a new store.
	 *
	 * @param id the id
	 * @param accountId the account id
	 */
	public Store(int id) {
		this.id = id;
	}


	public Store(int id,String name, Boolean isDelete, String description, Set<Employee> employees,
			Set<Warehouse> warehouses, Set<Product> products, Set<Desk> desks, Set<Promotion> promotions,
			Set<StoreAccount> storeAccount, Set<Customer> customer) {
		super();
		this.id = id;
		this.name = name;
		this.isDelete = isDelete;
		this.description = description;
		this.employees = employees;
		this.warehouses = warehouses;
		this.products = products;
		this.desks = desks;
		this.promotions = promotions;
		this.storeAccount = storeAccount;
		this.customer = customer;
	}

	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	@Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id the new id
	 */
	public void setId(int id) {
		this.id = id;
	}


	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the checks if is delete.
	 *
	 * @return the checks if is delete
	 */
	@Column(name = "isDelete")
	public Boolean getIsDelete() {
		return this.isDelete;
	}

	/**
	 * Sets the checks if is delete.
	 *
	 * @param isDelete the new checks if is delete
	 */
	public void setIsDelete(Boolean isDelete) {
		this.isDelete = isDelete;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the employees.
	 *
	 * @return the employees
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	/**
	 * Sets the employees.
	 *
	 * @param employees the new employees
	 */
	public void setEmployees(Set<Employee> employees) {
		this.employees = employees;
	}

	/**
	 * Gets the warehouses.
	 *
	 * @return the warehouses
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Warehouse> getWarehouses() {
		return this.warehouses;
	}

	/**
	 * Sets the warehouses.
	 *
	 * @param warehouses the new warehouses
	 */
	public void setWarehouses(Set<Warehouse> warehouses) {
		this.warehouses = warehouses;
	}

	/**
	 * Gets the products.
	 *
	 * @return the products
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Product> getProducts() {
		return this.products;
	}

	/**
	 * Sets the products.
	 *
	 * @param products the new products
	 */
	public void setProducts(Set<Product> products) {
		this.products = products;
	}

	/**
	 * Gets the desks.
	 *
	 * @return the desks
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Desk> getDesks() {
		return this.desks;
	}

	/**
	 * Sets the desks.
	 *
	 * @param desks the new desks
	 */
	public void setDesks(Set<Desk> desks) {
		this.desks = desks;
	}

	/**
	 * Gets the promotions.
	 *
	 * @return the promotions
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Promotion> getPromotions() {
		return this.promotions;
	}

	/**
	 * Sets the promotions.
	 *
	 * @param promotions the new promotions
	 */
	public void setPromotions(Set<Promotion> promotions) {
		this.promotions = promotions;
	}
	
	/**
	 * Gets the store account.
	 *
	 * @return the store account
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<StoreAccount> getStoreAccount() {
		return storeAccount;
	}

	/**
	 * Sets the store account.
	 *
	 * @param storeAccount the new store account
	 */
	public void setStoreAccount(Set<StoreAccount> storeAccount) {
		this.storeAccount = storeAccount;
	}

	/**
	 * Gets the store account.
	 *
	 * @return the store account
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Customer> getCustomer() {
		return customer;
	}

	/**
	 * Sets the store account.
	 *
	 * @param storeAccount the new store account
	 */
	public void setCustomer(Set<Customer> customer) {
		this.customer = customer;
	}


}
