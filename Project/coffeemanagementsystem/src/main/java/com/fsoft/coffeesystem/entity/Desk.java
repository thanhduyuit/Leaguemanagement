package com.fsoft.coffeesystem.entity;

// Generated 11-Jan-2017 22:33:33 by Hibernate Tools 5.2.0.Beta1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
// TODO: Auto-generated Javadoc

/**
 * Desk generated by hbm2java.
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "desk")
public class Desk implements java.io.Serializable {

	/** The id. */
	private int id;
	
	/** The device. */
	private Device device;
	
	/** The group desk. */
	private GroupDesk groupDesk;	
	
	/** The store. */
	private Store store;
	
	/** The name. */
	private String name;
	
	/** The quantity of seats. */
	private int quantityOfSeats;
	
	/** The description. */
	private String description;
	
	/** The is delete. */
	private Boolean isDelete;
	
	/** The orders. */
	private Set<Order> orders = new HashSet<Order>(0);

	/**
	 * Instantiates a new desk.
	 */
	public Desk() {
	}

	/**
	 * Instantiates a new desk.
	 *
	 * @param id the id
	 * @param groupDesk the group desk
	 * @param name the name
	 * @param quantityOfSeats the quantity of seats
	 */
	public Desk(int id, GroupDesk groupDesk, String name, int quantityOfSeats) {
		this.id = id;
		this.groupDesk = groupDesk;
		this.name = name;
		this.quantityOfSeats = quantityOfSeats;
	}

	public Desk (GroupDesk groupDesk, Device device, String name, int quantityOfSeats, String description) {
		this.groupDesk = groupDesk;
		this.device = device;
		
		this.name = name;
		this.quantityOfSeats = quantityOfSeats;
		this.description = description;
	}
	/**
	 * Instantiates a new desk.
	 *
	 * @param id the id
	 * @param device the device
	 * @param groupDesk the group desk
	 * @param store the store
	 * @param name the name
	 * @param quantityOfSeats the quantity of seats
	 * @param description the description
	 * @param isDelete the is delete
	 * @param orders the orders
	 */
	public Desk(int id, Device device, GroupDesk groupDesk, Store store, String name, int quantityOfSeats,
			String description, Boolean isDelete, Set<Order> orders) {
		this.id = id;
		this.device = device;
		this.groupDesk = groupDesk;
		this.store = store;
		this.name = name;
		this.quantityOfSeats = quantityOfSeats;
		this.description = description;
		this.isDelete = isDelete;
		this.orders = orders;
	}

	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	@Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id the new id
	 */
	public void setId(int id) {
		this.id = id;
	}

	/**
	 * Gets the device.
	 *
	 * @return the device
	 */
	@ManyToOne
	@JoinColumn(name = "deviceId")
	public Device getDevice() {
		return this.device;
	}

	/**
	 * Sets the device.
	 *
	 * @param device the new device
	 */
	public void setDevice(Device device) {
		this.device = device;
	}

	/**
	 * Gets the group desk.
	 *
	 * @return the group desk
	 */
	@ManyToOne
	@JoinColumn(name = "groupDeskId", nullable = false)
	public GroupDesk getGroupDesk() {
		return this.groupDesk;
	}

	/**
	 * Sets the group desk.
	 *
	 * @param groupDesk the new group desk
	 */
	public void setGroupDesk(GroupDesk groupDesk) {
		this.groupDesk = groupDesk;
	}

	/**
	 * Gets the store.
	 *
	 * @return the store
	 */
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "storeId")
	public Store getStore() {
		return this.store;
	}

	/**
	 * Sets the store.
	 *
	 * @param store the new store
	 */
	public void setStore(Store store) {
		this.store = store;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the quantity of seats.
	 *
	 * @return the quantity of seats
	 */
	@Column(name = "quantityOfSeats", nullable = false)
	public int getQuantityOfSeats() {
		return this.quantityOfSeats;
	}

	/**
	 * Sets the quantity of seats.
	 *
	 * @param quantityOfSeats the new quantity of seats
	 */
	public void setQuantityOfSeats(int quantityOfSeats) {
		this.quantityOfSeats = quantityOfSeats;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the checks if is delete.
	 *
	 * @return the checks if is delete
	 */
	@Column(name = "isDelete")
	public Boolean getIsDelete() {
		return this.isDelete;
	}

	/**
	 * Sets the checks if is delete.
	 *
	 * @param isDelete the new checks if is delete
	 */
	public void setIsDelete(Boolean isDelete) {
		this.isDelete = isDelete;
	}

	/**
	 * Gets the orders.
	 *
	 * @return the orders
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "desk")
	public Set<Order> getOrders() {
		return this.orders;
	}

	/**
	 * Sets the orders.
	 *
	 * @param orders the new orders
	 */
	public void setOrders(Set<Order> orders) {
		this.orders = orders;
	}

}
